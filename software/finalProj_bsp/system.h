/*
 * system.h - SOPC Builder system and BSP software package information
 *
 * Machine generated for CPU 'nios2_gen2_0' in SOPC Builder design 'finalProject'
 * SOPC Builder design path: C:/Users/augh/Documents/ECE385/finalProject_multiWaveform/finalProject.sopcinfo
 *
 * Generated: Wed Jul 21 14:52:04 PDT 2021
 */

/*
 * DO NOT MODIFY THIS FILE
 *
 * Changing this file will have subtle consequences
 * which will almost certainly lead to a nonfunctioning
 * system. If you do modify this file, be aware that your
 * changes will be overwritten and lost when this file
 * is generated again.
 *
 * DO NOT MODIFY THIS FILE
 */

/*
 * License Agreement
 *
 * Copyright (c) 2008
 * Altera Corporation, San Jose, California, USA.
 * All rights reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sublicense,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 *
 * This agreement shall be governed in all respects by the laws of the State
 * of California and by the laws of the United States of America.
 */

#ifndef __SYSTEM_H_
#define __SYSTEM_H_

/* Include definitions from linker script generator */
#include "linker.h"


/*
 * CPU configuration
 *
 */

#define ALT_CPU_ARCHITECTURE "altera_nios2_gen2"
#define ALT_CPU_BIG_ENDIAN 0
#define ALT_CPU_BREAK_ADDR 0x00001020
#define ALT_CPU_CPU_ARCH_NIOS2_R1
#define ALT_CPU_CPU_FREQ 50000000u
#define ALT_CPU_CPU_ID_SIZE 1
#define ALT_CPU_CPU_ID_VALUE 0x00000000
#define ALT_CPU_CPU_IMPLEMENTATION "tiny"
#define ALT_CPU_DATA_ADDR_WIDTH 0x1c
#define ALT_CPU_DCACHE_LINE_SIZE 0
#define ALT_CPU_DCACHE_LINE_SIZE_LOG2 0
#define ALT_CPU_DCACHE_SIZE 0
#define ALT_CPU_EXCEPTION_ADDR 0x08000020
#define ALT_CPU_FLASH_ACCELERATOR_LINES 0
#define ALT_CPU_FLASH_ACCELERATOR_LINE_SIZE 0
#define ALT_CPU_FLUSHDA_SUPPORTED
#define ALT_CPU_FREQ 50000000
#define ALT_CPU_HARDWARE_DIVIDE_PRESENT 0
#define ALT_CPU_HARDWARE_MULTIPLY_PRESENT 0
#define ALT_CPU_HARDWARE_MULX_PRESENT 0
#define ALT_CPU_HAS_DEBUG_CORE 1
#define ALT_CPU_HAS_DEBUG_STUB
#define ALT_CPU_HAS_ILLEGAL_INSTRUCTION_EXCEPTION
#define ALT_CPU_HAS_JMPI_INSTRUCTION
#define ALT_CPU_ICACHE_LINE_SIZE 0
#define ALT_CPU_ICACHE_LINE_SIZE_LOG2 0
#define ALT_CPU_ICACHE_SIZE 0
#define ALT_CPU_INST_ADDR_WIDTH 0x1c
#define ALT_CPU_NAME "nios2_gen2_0"
#define ALT_CPU_OCI_VERSION 1
#define ALT_CPU_RESET_ADDR 0x08000000


/*
 * CPU configuration (with legacy prefix - don't use these anymore)
 *
 */

#define NIOS2_BIG_ENDIAN 0
#define NIOS2_BREAK_ADDR 0x00001020
#define NIOS2_CPU_ARCH_NIOS2_R1
#define NIOS2_CPU_FREQ 50000000u
#define NIOS2_CPU_ID_SIZE 1
#define NIOS2_CPU_ID_VALUE 0x00000000
#define NIOS2_CPU_IMPLEMENTATION "tiny"
#define NIOS2_DATA_ADDR_WIDTH 0x1c
#define NIOS2_DCACHE_LINE_SIZE 0
#define NIOS2_DCACHE_LINE_SIZE_LOG2 0
#define NIOS2_DCACHE_SIZE 0
#define NIOS2_EXCEPTION_ADDR 0x08000020
#define NIOS2_FLASH_ACCELERATOR_LINES 0
#define NIOS2_FLASH_ACCELERATOR_LINE_SIZE 0
#define NIOS2_FLUSHDA_SUPPORTED
#define NIOS2_HARDWARE_DIVIDE_PRESENT 0
#define NIOS2_HARDWARE_MULTIPLY_PRESENT 0
#define NIOS2_HARDWARE_MULX_PRESENT 0
#define NIOS2_HAS_DEBUG_CORE 1
#define NIOS2_HAS_DEBUG_STUB
#define NIOS2_HAS_ILLEGAL_INSTRUCTION_EXCEPTION
#define NIOS2_HAS_JMPI_INSTRUCTION
#define NIOS2_ICACHE_LINE_SIZE 0
#define NIOS2_ICACHE_LINE_SIZE_LOG2 0
#define NIOS2_ICACHE_SIZE 0
#define NIOS2_INST_ADDR_WIDTH 0x1c
#define NIOS2_OCI_VERSION 1
#define NIOS2_RESET_ADDR 0x08000000


/*
 * Define for each module class mastered by the CPU
 *
 */

#define __ALTERA_AVALON_I2C
#define __ALTERA_AVALON_JTAG_UART
#define __ALTERA_AVALON_NEW_SDRAM_CONTROLLER
#define __ALTERA_AVALON_ONCHIP_MEMORY2
#define __ALTERA_AVALON_PIO
#define __ALTERA_AVALON_SPI
#define __ALTERA_AVALON_SYSID_QSYS
#define __ALTERA_AVALON_TIMER
#define __ALTERA_NIOS2_GEN2
#define __ALTPLL


/*
 * System configuration
 *
 */

#define ALT_DEVICE_FAMILY "MAX 10"
#define ALT_ENHANCED_INTERRUPT_API_PRESENT
#define ALT_IRQ_BASE NULL
#define ALT_LOG_PORT "/dev/null"
#define ALT_LOG_PORT_BASE 0x0
#define ALT_LOG_PORT_DEV null
#define ALT_LOG_PORT_TYPE ""
#define ALT_NUM_EXTERNAL_INTERRUPT_CONTROLLERS 0
#define ALT_NUM_INTERNAL_INTERRUPT_CONTROLLERS 1
#define ALT_NUM_INTERRUPT_CONTROLLERS 1
#define ALT_STDERR "/dev/jtag_uart"
#define ALT_STDERR_BASE 0x3f0
#define ALT_STDERR_DEV jtag_uart
#define ALT_STDERR_IS_JTAG_UART
#define ALT_STDERR_PRESENT
#define ALT_STDERR_TYPE "altera_avalon_jtag_uart"
#define ALT_STDIN "/dev/jtag_uart"
#define ALT_STDIN_BASE 0x3f0
#define ALT_STDIN_DEV jtag_uart
#define ALT_STDIN_IS_JTAG_UART
#define ALT_STDIN_PRESENT
#define ALT_STDIN_TYPE "altera_avalon_jtag_uart"
#define ALT_STDOUT "/dev/jtag_uart"
#define ALT_STDOUT_BASE 0x3f0
#define ALT_STDOUT_DEV jtag_uart
#define ALT_STDOUT_IS_JTAG_UART
#define ALT_STDOUT_PRESENT
#define ALT_STDOUT_TYPE "altera_avalon_jtag_uart"
#define ALT_SYSTEM_NAME "finalProject"


/*
 * hal configuration
 *
 */

#define ALT_INCLUDE_INSTRUCTION_RELATED_EXCEPTION_API
#define ALT_MAX_FD 32
#define ALT_SYS_CLK TIMER
#define ALT_TIMESTAMP_CLK none


/*
 * hex_digits_pio configuration
 *
 */

#define ALT_MODULE_CLASS_hex_digits_pio altera_avalon_pio
#define HEX_DIGITS_PIO_BASE 0x370
#define HEX_DIGITS_PIO_BIT_CLEARING_EDGE_REGISTER 0
#define HEX_DIGITS_PIO_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HEX_DIGITS_PIO_CAPTURE 0
#define HEX_DIGITS_PIO_DATA_WIDTH 16
#define HEX_DIGITS_PIO_DO_TEST_BENCH_WIRING 0
#define HEX_DIGITS_PIO_DRIVEN_SIM_VALUE 0
#define HEX_DIGITS_PIO_EDGE_TYPE "NONE"
#define HEX_DIGITS_PIO_FREQ 50000000
#define HEX_DIGITS_PIO_HAS_IN 0
#define HEX_DIGITS_PIO_HAS_OUT 1
#define HEX_DIGITS_PIO_HAS_TRI 0
#define HEX_DIGITS_PIO_IRQ -1
#define HEX_DIGITS_PIO_IRQ_INTERRUPT_CONTROLLER_ID -1
#define HEX_DIGITS_PIO_IRQ_TYPE "NONE"
#define HEX_DIGITS_PIO_NAME "/dev/hex_digits_pio"
#define HEX_DIGITS_PIO_RESET_VALUE 0
#define HEX_DIGITS_PIO_SPAN 16
#define HEX_DIGITS_PIO_TYPE "altera_avalon_pio"


/*
 * i2c_0 configuration
 *
 */

#define ALT_MODULE_CLASS_i2c_0 altera_avalon_i2c
#define I2C_0_BASE 0x80
#define I2C_0_FIFO_DEPTH 16
#define I2C_0_FREQ 50000000
#define I2C_0_IRQ 4
#define I2C_0_IRQ_INTERRUPT_CONTROLLER_ID 0
#define I2C_0_NAME "/dev/i2c_0"
#define I2C_0_SPAN 64
#define I2C_0_TYPE "altera_avalon_i2c"
#define I2C_0_USE_AV_ST 0


/*
 * jtag_uart configuration
 *
 */

#define ALT_MODULE_CLASS_jtag_uart altera_avalon_jtag_uart
#define JTAG_UART_BASE 0x3f0
#define JTAG_UART_IRQ 1
#define JTAG_UART_IRQ_INTERRUPT_CONTROLLER_ID 0
#define JTAG_UART_NAME "/dev/jtag_uart"
#define JTAG_UART_READ_DEPTH 64
#define JTAG_UART_READ_THRESHOLD 8
#define JTAG_UART_SPAN 8
#define JTAG_UART_TYPE "altera_avalon_jtag_uart"
#define JTAG_UART_WRITE_DEPTH 64
#define JTAG_UART_WRITE_THRESHOLD 8


/*
 * key configuration
 *
 */

#define ALT_MODULE_CLASS_key altera_avalon_pio
#define KEY_BASE 0x350
#define KEY_BIT_CLEARING_EDGE_REGISTER 0
#define KEY_BIT_MODIFYING_OUTPUT_REGISTER 0
#define KEY_CAPTURE 0
#define KEY_DATA_WIDTH 2
#define KEY_DO_TEST_BENCH_WIRING 0
#define KEY_DRIVEN_SIM_VALUE 0
#define KEY_EDGE_TYPE "NONE"
#define KEY_FREQ 50000000
#define KEY_HAS_IN 1
#define KEY_HAS_OUT 0
#define KEY_HAS_TRI 0
#define KEY_IRQ -1
#define KEY_IRQ_INTERRUPT_CONTROLLER_ID -1
#define KEY_IRQ_TYPE "NONE"
#define KEY_NAME "/dev/key"
#define KEY_RESET_VALUE 0
#define KEY_SPAN 16
#define KEY_TYPE "altera_avalon_pio"


/*
 * keycode configuration
 *
 */

#define ALT_MODULE_CLASS_keycode altera_avalon_pio
#define KEYCODE_BASE 0x3b0
#define KEYCODE_BIT_CLEARING_EDGE_REGISTER 0
#define KEYCODE_BIT_MODIFYING_OUTPUT_REGISTER 0
#define KEYCODE_CAPTURE 0
#define KEYCODE_DATA_WIDTH 8
#define KEYCODE_DO_TEST_BENCH_WIRING 0
#define KEYCODE_DRIVEN_SIM_VALUE 0
#define KEYCODE_EDGE_TYPE "NONE"
#define KEYCODE_FREQ 50000000
#define KEYCODE_HAS_IN 0
#define KEYCODE_HAS_OUT 1
#define KEYCODE_HAS_TRI 0
#define KEYCODE_IRQ -1
#define KEYCODE_IRQ_INTERRUPT_CONTROLLER_ID -1
#define KEYCODE_IRQ_TYPE "NONE"
#define KEYCODE_NAME "/dev/keycode"
#define KEYCODE_RESET_VALUE 0
#define KEYCODE_SPAN 16
#define KEYCODE_TYPE "altera_avalon_pio"


/*
 * keycode1 configuration
 *
 */

#define ALT_MODULE_CLASS_keycode1 altera_avalon_pio
#define KEYCODE1_BASE 0x220
#define KEYCODE1_BIT_CLEARING_EDGE_REGISTER 0
#define KEYCODE1_BIT_MODIFYING_OUTPUT_REGISTER 0
#define KEYCODE1_CAPTURE 0
#define KEYCODE1_DATA_WIDTH 8
#define KEYCODE1_DO_TEST_BENCH_WIRING 0
#define KEYCODE1_DRIVEN_SIM_VALUE 0
#define KEYCODE1_EDGE_TYPE "NONE"
#define KEYCODE1_FREQ 50000000
#define KEYCODE1_HAS_IN 0
#define KEYCODE1_HAS_OUT 1
#define KEYCODE1_HAS_TRI 0
#define KEYCODE1_IRQ -1
#define KEYCODE1_IRQ_INTERRUPT_CONTROLLER_ID -1
#define KEYCODE1_IRQ_TYPE "NONE"
#define KEYCODE1_NAME "/dev/keycode1"
#define KEYCODE1_RESET_VALUE 0
#define KEYCODE1_SPAN 16
#define KEYCODE1_TYPE "altera_avalon_pio"


/*
 * keycode2 configuration
 *
 */

#define ALT_MODULE_CLASS_keycode2 altera_avalon_pio
#define KEYCODE2_BASE 0x210
#define KEYCODE2_BIT_CLEARING_EDGE_REGISTER 0
#define KEYCODE2_BIT_MODIFYING_OUTPUT_REGISTER 0
#define KEYCODE2_CAPTURE 0
#define KEYCODE2_DATA_WIDTH 8
#define KEYCODE2_DO_TEST_BENCH_WIRING 0
#define KEYCODE2_DRIVEN_SIM_VALUE 0
#define KEYCODE2_EDGE_TYPE "NONE"
#define KEYCODE2_FREQ 50000000
#define KEYCODE2_HAS_IN 0
#define KEYCODE2_HAS_OUT 1
#define KEYCODE2_HAS_TRI 0
#define KEYCODE2_IRQ -1
#define KEYCODE2_IRQ_INTERRUPT_CONTROLLER_ID -1
#define KEYCODE2_IRQ_TYPE "NONE"
#define KEYCODE2_NAME "/dev/keycode2"
#define KEYCODE2_RESET_VALUE 0
#define KEYCODE2_SPAN 16
#define KEYCODE2_TYPE "altera_avalon_pio"


/*
 * keycode3 configuration
 *
 */

#define ALT_MODULE_CLASS_keycode3 altera_avalon_pio
#define KEYCODE3_BASE 0x200
#define KEYCODE3_BIT_CLEARING_EDGE_REGISTER 0
#define KEYCODE3_BIT_MODIFYING_OUTPUT_REGISTER 0
#define KEYCODE3_CAPTURE 0
#define KEYCODE3_DATA_WIDTH 8
#define KEYCODE3_DO_TEST_BENCH_WIRING 0
#define KEYCODE3_DRIVEN_SIM_VALUE 0
#define KEYCODE3_EDGE_TYPE "NONE"
#define KEYCODE3_FREQ 50000000
#define KEYCODE3_HAS_IN 0
#define KEYCODE3_HAS_OUT 1
#define KEYCODE3_HAS_TRI 0
#define KEYCODE3_IRQ -1
#define KEYCODE3_IRQ_INTERRUPT_CONTROLLER_ID -1
#define KEYCODE3_IRQ_TYPE "NONE"
#define KEYCODE3_NAME "/dev/keycode3"
#define KEYCODE3_RESET_VALUE 0
#define KEYCODE3_SPAN 16
#define KEYCODE3_TYPE "altera_avalon_pio"


/*
 * leds_pio configuration
 *
 */

#define ALT_MODULE_CLASS_leds_pio altera_avalon_pio
#define LEDS_PIO_BASE 0x360
#define LEDS_PIO_BIT_CLEARING_EDGE_REGISTER 0
#define LEDS_PIO_BIT_MODIFYING_OUTPUT_REGISTER 0
#define LEDS_PIO_CAPTURE 0
#define LEDS_PIO_DATA_WIDTH 14
#define LEDS_PIO_DO_TEST_BENCH_WIRING 0
#define LEDS_PIO_DRIVEN_SIM_VALUE 0
#define LEDS_PIO_EDGE_TYPE "NONE"
#define LEDS_PIO_FREQ 50000000
#define LEDS_PIO_HAS_IN 0
#define LEDS_PIO_HAS_OUT 1
#define LEDS_PIO_HAS_TRI 0
#define LEDS_PIO_IRQ -1
#define LEDS_PIO_IRQ_INTERRUPT_CONTROLLER_ID -1
#define LEDS_PIO_IRQ_TYPE "NONE"
#define LEDS_PIO_NAME "/dev/leds_pio"
#define LEDS_PIO_RESET_VALUE 0
#define LEDS_PIO_SPAN 16
#define LEDS_PIO_TYPE "altera_avalon_pio"


/*
 * noteIdx0 configuration
 *
 */

#define ALT_MODULE_CLASS_noteIdx0 altera_avalon_pio
#define NOTEIDX0_BASE 0x110
#define NOTEIDX0_BIT_CLEARING_EDGE_REGISTER 0
#define NOTEIDX0_BIT_MODIFYING_OUTPUT_REGISTER 0
#define NOTEIDX0_CAPTURE 0
#define NOTEIDX0_DATA_WIDTH 32
#define NOTEIDX0_DO_TEST_BENCH_WIRING 0
#define NOTEIDX0_DRIVEN_SIM_VALUE 0
#define NOTEIDX0_EDGE_TYPE "NONE"
#define NOTEIDX0_FREQ 50000000
#define NOTEIDX0_HAS_IN 1
#define NOTEIDX0_HAS_OUT 0
#define NOTEIDX0_HAS_TRI 0
#define NOTEIDX0_IRQ -1
#define NOTEIDX0_IRQ_INTERRUPT_CONTROLLER_ID -1
#define NOTEIDX0_IRQ_TYPE "NONE"
#define NOTEIDX0_NAME "/dev/noteIdx0"
#define NOTEIDX0_RESET_VALUE 0
#define NOTEIDX0_SPAN 16
#define NOTEIDX0_TYPE "altera_avalon_pio"


/*
 * noteIdx1 configuration
 *
 */

#define ALT_MODULE_CLASS_noteIdx1 altera_avalon_pio
#define NOTEIDX1_BASE 0x100
#define NOTEIDX1_BIT_CLEARING_EDGE_REGISTER 0
#define NOTEIDX1_BIT_MODIFYING_OUTPUT_REGISTER 0
#define NOTEIDX1_CAPTURE 0
#define NOTEIDX1_DATA_WIDTH 32
#define NOTEIDX1_DO_TEST_BENCH_WIRING 0
#define NOTEIDX1_DRIVEN_SIM_VALUE 0
#define NOTEIDX1_EDGE_TYPE "NONE"
#define NOTEIDX1_FREQ 50000000
#define NOTEIDX1_HAS_IN 1
#define NOTEIDX1_HAS_OUT 0
#define NOTEIDX1_HAS_TRI 0
#define NOTEIDX1_IRQ -1
#define NOTEIDX1_IRQ_INTERRUPT_CONTROLLER_ID -1
#define NOTEIDX1_IRQ_TYPE "NONE"
#define NOTEIDX1_NAME "/dev/noteIdx1"
#define NOTEIDX1_RESET_VALUE 0
#define NOTEIDX1_SPAN 16
#define NOTEIDX1_TYPE "altera_avalon_pio"


/*
 * noteIdx2 configuration
 *
 */

#define ALT_MODULE_CLASS_noteIdx2 altera_avalon_pio
#define NOTEIDX2_BASE 0xf0
#define NOTEIDX2_BIT_CLEARING_EDGE_REGISTER 0
#define NOTEIDX2_BIT_MODIFYING_OUTPUT_REGISTER 0
#define NOTEIDX2_CAPTURE 0
#define NOTEIDX2_DATA_WIDTH 32
#define NOTEIDX2_DO_TEST_BENCH_WIRING 0
#define NOTEIDX2_DRIVEN_SIM_VALUE 0
#define NOTEIDX2_EDGE_TYPE "NONE"
#define NOTEIDX2_FREQ 50000000
#define NOTEIDX2_HAS_IN 1
#define NOTEIDX2_HAS_OUT 0
#define NOTEIDX2_HAS_TRI 0
#define NOTEIDX2_IRQ -1
#define NOTEIDX2_IRQ_INTERRUPT_CONTROLLER_ID -1
#define NOTEIDX2_IRQ_TYPE "NONE"
#define NOTEIDX2_NAME "/dev/noteIdx2"
#define NOTEIDX2_RESET_VALUE 0
#define NOTEIDX2_SPAN 16
#define NOTEIDX2_TYPE "altera_avalon_pio"


/*
 * noteIdx3 configuration
 *
 */

#define ALT_MODULE_CLASS_noteIdx3 altera_avalon_pio
#define NOTEIDX3_BASE 0xe0
#define NOTEIDX3_BIT_CLEARING_EDGE_REGISTER 0
#define NOTEIDX3_BIT_MODIFYING_OUTPUT_REGISTER 0
#define NOTEIDX3_CAPTURE 0
#define NOTEIDX3_DATA_WIDTH 32
#define NOTEIDX3_DO_TEST_BENCH_WIRING 0
#define NOTEIDX3_DRIVEN_SIM_VALUE 0
#define NOTEIDX3_EDGE_TYPE "NONE"
#define NOTEIDX3_FREQ 50000000
#define NOTEIDX3_HAS_IN 1
#define NOTEIDX3_HAS_OUT 0
#define NOTEIDX3_HAS_TRI 0
#define NOTEIDX3_IRQ -1
#define NOTEIDX3_IRQ_INTERRUPT_CONTROLLER_ID -1
#define NOTEIDX3_IRQ_TYPE "NONE"
#define NOTEIDX3_NAME "/dev/noteIdx3"
#define NOTEIDX3_RESET_VALUE 0
#define NOTEIDX3_SPAN 16
#define NOTEIDX3_TYPE "altera_avalon_pio"


/*
 * oct configuration
 *
 */

#define ALT_MODULE_CLASS_oct altera_avalon_pio
#define OCT_BASE 0x1f0
#define OCT_BIT_CLEARING_EDGE_REGISTER 0
#define OCT_BIT_MODIFYING_OUTPUT_REGISTER 0
#define OCT_CAPTURE 0
#define OCT_DATA_WIDTH 8
#define OCT_DO_TEST_BENCH_WIRING 0
#define OCT_DRIVEN_SIM_VALUE 0
#define OCT_EDGE_TYPE "NONE"
#define OCT_FREQ 50000000
#define OCT_HAS_IN 0
#define OCT_HAS_OUT 1
#define OCT_HAS_TRI 0
#define OCT_IRQ -1
#define OCT_IRQ_INTERRUPT_CONTROLLER_ID -1
#define OCT_IRQ_TYPE "NONE"
#define OCT_NAME "/dev/oct"
#define OCT_RESET_VALUE 0
#define OCT_SPAN 16
#define OCT_TYPE "altera_avalon_pio"


/*
 * onchip_memory2_0 configuration
 *
 */

#define ALT_MODULE_CLASS_onchip_memory2_0 altera_avalon_onchip_memory2
#define ONCHIP_MEMORY2_0_ALLOW_IN_SYSTEM_MEMORY_CONTENT_EDITOR 0
#define ONCHIP_MEMORY2_0_ALLOW_MRAM_SIM_CONTENTS_ONLY_FILE 0
#define ONCHIP_MEMORY2_0_BASE 0x0
#define ONCHIP_MEMORY2_0_CONTENTS_INFO ""
#define ONCHIP_MEMORY2_0_DUAL_PORT 0
#define ONCHIP_MEMORY2_0_GUI_RAM_BLOCK_TYPE "AUTO"
#define ONCHIP_MEMORY2_0_INIT_CONTENTS_FILE "finalProject_onchip_memory2_0"
#define ONCHIP_MEMORY2_0_INIT_MEM_CONTENT 1
#define ONCHIP_MEMORY2_0_INSTANCE_ID "NONE"
#define ONCHIP_MEMORY2_0_IRQ -1
#define ONCHIP_MEMORY2_0_IRQ_INTERRUPT_CONTROLLER_ID -1
#define ONCHIP_MEMORY2_0_NAME "/dev/onchip_memory2_0"
#define ONCHIP_MEMORY2_0_NON_DEFAULT_INIT_FILE_ENABLED 0
#define ONCHIP_MEMORY2_0_RAM_BLOCK_TYPE "AUTO"
#define ONCHIP_MEMORY2_0_READ_DURING_WRITE_MODE "DONT_CARE"
#define ONCHIP_MEMORY2_0_SINGLE_CLOCK_OP 0
#define ONCHIP_MEMORY2_0_SIZE_MULTIPLE 1
#define ONCHIP_MEMORY2_0_SIZE_VALUE 16
#define ONCHIP_MEMORY2_0_SPAN 16
#define ONCHIP_MEMORY2_0_TYPE "altera_avalon_onchip_memory2"
#define ONCHIP_MEMORY2_0_WRITABLE 1


/*
 * phase_incr0 configuration
 *
 */

#define ALT_MODULE_CLASS_phase_incr0 altera_avalon_pio
#define PHASE_INCR0_BASE 0x340
#define PHASE_INCR0_BIT_CLEARING_EDGE_REGISTER 0
#define PHASE_INCR0_BIT_MODIFYING_OUTPUT_REGISTER 0
#define PHASE_INCR0_CAPTURE 0
#define PHASE_INCR0_DATA_WIDTH 32
#define PHASE_INCR0_DO_TEST_BENCH_WIRING 0
#define PHASE_INCR0_DRIVEN_SIM_VALUE 0
#define PHASE_INCR0_EDGE_TYPE "NONE"
#define PHASE_INCR0_FREQ 50000000
#define PHASE_INCR0_HAS_IN 0
#define PHASE_INCR0_HAS_OUT 1
#define PHASE_INCR0_HAS_TRI 0
#define PHASE_INCR0_IRQ -1
#define PHASE_INCR0_IRQ_INTERRUPT_CONTROLLER_ID -1
#define PHASE_INCR0_IRQ_TYPE "NONE"
#define PHASE_INCR0_NAME "/dev/phase_incr0"
#define PHASE_INCR0_RESET_VALUE 0
#define PHASE_INCR0_SPAN 16
#define PHASE_INCR0_TYPE "altera_avalon_pio"


/*
 * phase_incr1 configuration
 *
 */

#define ALT_MODULE_CLASS_phase_incr1 altera_avalon_pio
#define PHASE_INCR1_BASE 0x330
#define PHASE_INCR1_BIT_CLEARING_EDGE_REGISTER 0
#define PHASE_INCR1_BIT_MODIFYING_OUTPUT_REGISTER 0
#define PHASE_INCR1_CAPTURE 0
#define PHASE_INCR1_DATA_WIDTH 32
#define PHASE_INCR1_DO_TEST_BENCH_WIRING 0
#define PHASE_INCR1_DRIVEN_SIM_VALUE 0
#define PHASE_INCR1_EDGE_TYPE "NONE"
#define PHASE_INCR1_FREQ 50000000
#define PHASE_INCR1_HAS_IN 0
#define PHASE_INCR1_HAS_OUT 1
#define PHASE_INCR1_HAS_TRI 0
#define PHASE_INCR1_IRQ -1
#define PHASE_INCR1_IRQ_INTERRUPT_CONTROLLER_ID -1
#define PHASE_INCR1_IRQ_TYPE "NONE"
#define PHASE_INCR1_NAME "/dev/phase_incr1"
#define PHASE_INCR1_RESET_VALUE 0
#define PHASE_INCR1_SPAN 16
#define PHASE_INCR1_TYPE "altera_avalon_pio"


/*
 * phase_incr10 configuration
 *
 */

#define ALT_MODULE_CLASS_phase_incr10 altera_avalon_pio
#define PHASE_INCR10_BASE 0x2a0
#define PHASE_INCR10_BIT_CLEARING_EDGE_REGISTER 0
#define PHASE_INCR10_BIT_MODIFYING_OUTPUT_REGISTER 0
#define PHASE_INCR10_CAPTURE 0
#define PHASE_INCR10_DATA_WIDTH 32
#define PHASE_INCR10_DO_TEST_BENCH_WIRING 0
#define PHASE_INCR10_DRIVEN_SIM_VALUE 0
#define PHASE_INCR10_EDGE_TYPE "NONE"
#define PHASE_INCR10_FREQ 50000000
#define PHASE_INCR10_HAS_IN 0
#define PHASE_INCR10_HAS_OUT 1
#define PHASE_INCR10_HAS_TRI 0
#define PHASE_INCR10_IRQ -1
#define PHASE_INCR10_IRQ_INTERRUPT_CONTROLLER_ID -1
#define PHASE_INCR10_IRQ_TYPE "NONE"
#define PHASE_INCR10_NAME "/dev/phase_incr10"
#define PHASE_INCR10_RESET_VALUE 0
#define PHASE_INCR10_SPAN 16
#define PHASE_INCR10_TYPE "altera_avalon_pio"


/*
 * phase_incr11 configuration
 *
 */

#define ALT_MODULE_CLASS_phase_incr11 altera_avalon_pio
#define PHASE_INCR11_BASE 0x290
#define PHASE_INCR11_BIT_CLEARING_EDGE_REGISTER 0
#define PHASE_INCR11_BIT_MODIFYING_OUTPUT_REGISTER 0
#define PHASE_INCR11_CAPTURE 0
#define PHASE_INCR11_DATA_WIDTH 32
#define PHASE_INCR11_DO_TEST_BENCH_WIRING 0
#define PHASE_INCR11_DRIVEN_SIM_VALUE 0
#define PHASE_INCR11_EDGE_TYPE "NONE"
#define PHASE_INCR11_FREQ 50000000
#define PHASE_INCR11_HAS_IN 0
#define PHASE_INCR11_HAS_OUT 1
#define PHASE_INCR11_HAS_TRI 0
#define PHASE_INCR11_IRQ -1
#define PHASE_INCR11_IRQ_INTERRUPT_CONTROLLER_ID -1
#define PHASE_INCR11_IRQ_TYPE "NONE"
#define PHASE_INCR11_NAME "/dev/phase_incr11"
#define PHASE_INCR11_RESET_VALUE 0
#define PHASE_INCR11_SPAN 16
#define PHASE_INCR11_TYPE "altera_avalon_pio"


/*
 * phase_incr12 configuration
 *
 */

#define ALT_MODULE_CLASS_phase_incr12 altera_avalon_pio
#define PHASE_INCR12_BASE 0x280
#define PHASE_INCR12_BIT_CLEARING_EDGE_REGISTER 0
#define PHASE_INCR12_BIT_MODIFYING_OUTPUT_REGISTER 0
#define PHASE_INCR12_CAPTURE 0
#define PHASE_INCR12_DATA_WIDTH 32
#define PHASE_INCR12_DO_TEST_BENCH_WIRING 0
#define PHASE_INCR12_DRIVEN_SIM_VALUE 0
#define PHASE_INCR12_EDGE_TYPE "NONE"
#define PHASE_INCR12_FREQ 50000000
#define PHASE_INCR12_HAS_IN 0
#define PHASE_INCR12_HAS_OUT 1
#define PHASE_INCR12_HAS_TRI 0
#define PHASE_INCR12_IRQ -1
#define PHASE_INCR12_IRQ_INTERRUPT_CONTROLLER_ID -1
#define PHASE_INCR12_IRQ_TYPE "NONE"
#define PHASE_INCR12_NAME "/dev/phase_incr12"
#define PHASE_INCR12_RESET_VALUE 0
#define PHASE_INCR12_SPAN 16
#define PHASE_INCR12_TYPE "altera_avalon_pio"


/*
 * phase_incr13 configuration
 *
 */

#define ALT_MODULE_CLASS_phase_incr13 altera_avalon_pio
#define PHASE_INCR13_BASE 0x270
#define PHASE_INCR13_BIT_CLEARING_EDGE_REGISTER 0
#define PHASE_INCR13_BIT_MODIFYING_OUTPUT_REGISTER 0
#define PHASE_INCR13_CAPTURE 0
#define PHASE_INCR13_DATA_WIDTH 32
#define PHASE_INCR13_DO_TEST_BENCH_WIRING 0
#define PHASE_INCR13_DRIVEN_SIM_VALUE 0
#define PHASE_INCR13_EDGE_TYPE "NONE"
#define PHASE_INCR13_FREQ 50000000
#define PHASE_INCR13_HAS_IN 0
#define PHASE_INCR13_HAS_OUT 1
#define PHASE_INCR13_HAS_TRI 0
#define PHASE_INCR13_IRQ -1
#define PHASE_INCR13_IRQ_INTERRUPT_CONTROLLER_ID -1
#define PHASE_INCR13_IRQ_TYPE "NONE"
#define PHASE_INCR13_NAME "/dev/phase_incr13"
#define PHASE_INCR13_RESET_VALUE 0
#define PHASE_INCR13_SPAN 16
#define PHASE_INCR13_TYPE "altera_avalon_pio"


/*
 * phase_incr14 configuration
 *
 */

#define ALT_MODULE_CLASS_phase_incr14 altera_avalon_pio
#define PHASE_INCR14_BASE 0x260
#define PHASE_INCR14_BIT_CLEARING_EDGE_REGISTER 0
#define PHASE_INCR14_BIT_MODIFYING_OUTPUT_REGISTER 0
#define PHASE_INCR14_CAPTURE 0
#define PHASE_INCR14_DATA_WIDTH 32
#define PHASE_INCR14_DO_TEST_BENCH_WIRING 0
#define PHASE_INCR14_DRIVEN_SIM_VALUE 0
#define PHASE_INCR14_EDGE_TYPE "NONE"
#define PHASE_INCR14_FREQ 50000000
#define PHASE_INCR14_HAS_IN 0
#define PHASE_INCR14_HAS_OUT 1
#define PHASE_INCR14_HAS_TRI 0
#define PHASE_INCR14_IRQ -1
#define PHASE_INCR14_IRQ_INTERRUPT_CONTROLLER_ID -1
#define PHASE_INCR14_IRQ_TYPE "NONE"
#define PHASE_INCR14_NAME "/dev/phase_incr14"
#define PHASE_INCR14_RESET_VALUE 0
#define PHASE_INCR14_SPAN 16
#define PHASE_INCR14_TYPE "altera_avalon_pio"


/*
 * phase_incr15 configuration
 *
 */

#define ALT_MODULE_CLASS_phase_incr15 altera_avalon_pio
#define PHASE_INCR15_BASE 0x250
#define PHASE_INCR15_BIT_CLEARING_EDGE_REGISTER 0
#define PHASE_INCR15_BIT_MODIFYING_OUTPUT_REGISTER 0
#define PHASE_INCR15_CAPTURE 0
#define PHASE_INCR15_DATA_WIDTH 32
#define PHASE_INCR15_DO_TEST_BENCH_WIRING 0
#define PHASE_INCR15_DRIVEN_SIM_VALUE 0
#define PHASE_INCR15_EDGE_TYPE "NONE"
#define PHASE_INCR15_FREQ 50000000
#define PHASE_INCR15_HAS_IN 0
#define PHASE_INCR15_HAS_OUT 1
#define PHASE_INCR15_HAS_TRI 0
#define PHASE_INCR15_IRQ -1
#define PHASE_INCR15_IRQ_INTERRUPT_CONTROLLER_ID -1
#define PHASE_INCR15_IRQ_TYPE "NONE"
#define PHASE_INCR15_NAME "/dev/phase_incr15"
#define PHASE_INCR15_RESET_VALUE 0
#define PHASE_INCR15_SPAN 16
#define PHASE_INCR15_TYPE "altera_avalon_pio"


/*
 * phase_incr16 configuration
 *
 */

#define ALT_MODULE_CLASS_phase_incr16 altera_avalon_pio
#define PHASE_INCR16_BASE 0x240
#define PHASE_INCR16_BIT_CLEARING_EDGE_REGISTER 0
#define PHASE_INCR16_BIT_MODIFYING_OUTPUT_REGISTER 0
#define PHASE_INCR16_CAPTURE 0
#define PHASE_INCR16_DATA_WIDTH 32
#define PHASE_INCR16_DO_TEST_BENCH_WIRING 0
#define PHASE_INCR16_DRIVEN_SIM_VALUE 0
#define PHASE_INCR16_EDGE_TYPE "NONE"
#define PHASE_INCR16_FREQ 50000000
#define PHASE_INCR16_HAS_IN 0
#define PHASE_INCR16_HAS_OUT 1
#define PHASE_INCR16_HAS_TRI 0
#define PHASE_INCR16_IRQ -1
#define PHASE_INCR16_IRQ_INTERRUPT_CONTROLLER_ID -1
#define PHASE_INCR16_IRQ_TYPE "NONE"
#define PHASE_INCR16_NAME "/dev/phase_incr16"
#define PHASE_INCR16_RESET_VALUE 0
#define PHASE_INCR16_SPAN 16
#define PHASE_INCR16_TYPE "altera_avalon_pio"


/*
 * phase_incr17 configuration
 *
 */

#define ALT_MODULE_CLASS_phase_incr17 altera_avalon_pio
#define PHASE_INCR17_BASE 0x230
#define PHASE_INCR17_BIT_CLEARING_EDGE_REGISTER 0
#define PHASE_INCR17_BIT_MODIFYING_OUTPUT_REGISTER 0
#define PHASE_INCR17_CAPTURE 0
#define PHASE_INCR17_DATA_WIDTH 32
#define PHASE_INCR17_DO_TEST_BENCH_WIRING 0
#define PHASE_INCR17_DRIVEN_SIM_VALUE 0
#define PHASE_INCR17_EDGE_TYPE "NONE"
#define PHASE_INCR17_FREQ 50000000
#define PHASE_INCR17_HAS_IN 0
#define PHASE_INCR17_HAS_OUT 1
#define PHASE_INCR17_HAS_TRI 0
#define PHASE_INCR17_IRQ -1
#define PHASE_INCR17_IRQ_INTERRUPT_CONTROLLER_ID -1
#define PHASE_INCR17_IRQ_TYPE "NONE"
#define PHASE_INCR17_NAME "/dev/phase_incr17"
#define PHASE_INCR17_RESET_VALUE 0
#define PHASE_INCR17_SPAN 16
#define PHASE_INCR17_TYPE "altera_avalon_pio"


/*
 * phase_incr18 configuration
 *
 */

#define ALT_MODULE_CLASS_phase_incr18 altera_avalon_pio
#define PHASE_INCR18_BASE 0x1e0
#define PHASE_INCR18_BIT_CLEARING_EDGE_REGISTER 0
#define PHASE_INCR18_BIT_MODIFYING_OUTPUT_REGISTER 0
#define PHASE_INCR18_CAPTURE 0
#define PHASE_INCR18_DATA_WIDTH 32
#define PHASE_INCR18_DO_TEST_BENCH_WIRING 0
#define PHASE_INCR18_DRIVEN_SIM_VALUE 0
#define PHASE_INCR18_EDGE_TYPE "NONE"
#define PHASE_INCR18_FREQ 50000000
#define PHASE_INCR18_HAS_IN 0
#define PHASE_INCR18_HAS_OUT 1
#define PHASE_INCR18_HAS_TRI 0
#define PHASE_INCR18_IRQ -1
#define PHASE_INCR18_IRQ_INTERRUPT_CONTROLLER_ID -1
#define PHASE_INCR18_IRQ_TYPE "NONE"
#define PHASE_INCR18_NAME "/dev/phase_incr18"
#define PHASE_INCR18_RESET_VALUE 0
#define PHASE_INCR18_SPAN 16
#define PHASE_INCR18_TYPE "altera_avalon_pio"


/*
 * phase_incr19 configuration
 *
 */

#define ALT_MODULE_CLASS_phase_incr19 altera_avalon_pio
#define PHASE_INCR19_BASE 0x1d0
#define PHASE_INCR19_BIT_CLEARING_EDGE_REGISTER 0
#define PHASE_INCR19_BIT_MODIFYING_OUTPUT_REGISTER 0
#define PHASE_INCR19_CAPTURE 0
#define PHASE_INCR19_DATA_WIDTH 32
#define PHASE_INCR19_DO_TEST_BENCH_WIRING 0
#define PHASE_INCR19_DRIVEN_SIM_VALUE 0
#define PHASE_INCR19_EDGE_TYPE "NONE"
#define PHASE_INCR19_FREQ 50000000
#define PHASE_INCR19_HAS_IN 0
#define PHASE_INCR19_HAS_OUT 1
#define PHASE_INCR19_HAS_TRI 0
#define PHASE_INCR19_IRQ -1
#define PHASE_INCR19_IRQ_INTERRUPT_CONTROLLER_ID -1
#define PHASE_INCR19_IRQ_TYPE "NONE"
#define PHASE_INCR19_NAME "/dev/phase_incr19"
#define PHASE_INCR19_RESET_VALUE 0
#define PHASE_INCR19_SPAN 16
#define PHASE_INCR19_TYPE "altera_avalon_pio"


/*
 * phase_incr2 configuration
 *
 */

#define ALT_MODULE_CLASS_phase_incr2 altera_avalon_pio
#define PHASE_INCR2_BASE 0x320
#define PHASE_INCR2_BIT_CLEARING_EDGE_REGISTER 0
#define PHASE_INCR2_BIT_MODIFYING_OUTPUT_REGISTER 0
#define PHASE_INCR2_CAPTURE 0
#define PHASE_INCR2_DATA_WIDTH 32
#define PHASE_INCR2_DO_TEST_BENCH_WIRING 0
#define PHASE_INCR2_DRIVEN_SIM_VALUE 0
#define PHASE_INCR2_EDGE_TYPE "NONE"
#define PHASE_INCR2_FREQ 50000000
#define PHASE_INCR2_HAS_IN 0
#define PHASE_INCR2_HAS_OUT 1
#define PHASE_INCR2_HAS_TRI 0
#define PHASE_INCR2_IRQ -1
#define PHASE_INCR2_IRQ_INTERRUPT_CONTROLLER_ID -1
#define PHASE_INCR2_IRQ_TYPE "NONE"
#define PHASE_INCR2_NAME "/dev/phase_incr2"
#define PHASE_INCR2_RESET_VALUE 0
#define PHASE_INCR2_SPAN 16
#define PHASE_INCR2_TYPE "altera_avalon_pio"


/*
 * phase_incr20 configuration
 *
 */

#define ALT_MODULE_CLASS_phase_incr20 altera_avalon_pio
#define PHASE_INCR20_BASE 0x1c0
#define PHASE_INCR20_BIT_CLEARING_EDGE_REGISTER 0
#define PHASE_INCR20_BIT_MODIFYING_OUTPUT_REGISTER 0
#define PHASE_INCR20_CAPTURE 0
#define PHASE_INCR20_DATA_WIDTH 32
#define PHASE_INCR20_DO_TEST_BENCH_WIRING 0
#define PHASE_INCR20_DRIVEN_SIM_VALUE 0
#define PHASE_INCR20_EDGE_TYPE "NONE"
#define PHASE_INCR20_FREQ 50000000
#define PHASE_INCR20_HAS_IN 0
#define PHASE_INCR20_HAS_OUT 1
#define PHASE_INCR20_HAS_TRI 0
#define PHASE_INCR20_IRQ -1
#define PHASE_INCR20_IRQ_INTERRUPT_CONTROLLER_ID -1
#define PHASE_INCR20_IRQ_TYPE "NONE"
#define PHASE_INCR20_NAME "/dev/phase_incr20"
#define PHASE_INCR20_RESET_VALUE 0
#define PHASE_INCR20_SPAN 16
#define PHASE_INCR20_TYPE "altera_avalon_pio"


/*
 * phase_incr21 configuration
 *
 */

#define ALT_MODULE_CLASS_phase_incr21 altera_avalon_pio
#define PHASE_INCR21_BASE 0x1b0
#define PHASE_INCR21_BIT_CLEARING_EDGE_REGISTER 0
#define PHASE_INCR21_BIT_MODIFYING_OUTPUT_REGISTER 0
#define PHASE_INCR21_CAPTURE 0
#define PHASE_INCR21_DATA_WIDTH 32
#define PHASE_INCR21_DO_TEST_BENCH_WIRING 0
#define PHASE_INCR21_DRIVEN_SIM_VALUE 0
#define PHASE_INCR21_EDGE_TYPE "NONE"
#define PHASE_INCR21_FREQ 50000000
#define PHASE_INCR21_HAS_IN 0
#define PHASE_INCR21_HAS_OUT 1
#define PHASE_INCR21_HAS_TRI 0
#define PHASE_INCR21_IRQ -1
#define PHASE_INCR21_IRQ_INTERRUPT_CONTROLLER_ID -1
#define PHASE_INCR21_IRQ_TYPE "NONE"
#define PHASE_INCR21_NAME "/dev/phase_incr21"
#define PHASE_INCR21_RESET_VALUE 0
#define PHASE_INCR21_SPAN 16
#define PHASE_INCR21_TYPE "altera_avalon_pio"


/*
 * phase_incr22 configuration
 *
 */

#define ALT_MODULE_CLASS_phase_incr22 altera_avalon_pio
#define PHASE_INCR22_BASE 0x1a0
#define PHASE_INCR22_BIT_CLEARING_EDGE_REGISTER 0
#define PHASE_INCR22_BIT_MODIFYING_OUTPUT_REGISTER 0
#define PHASE_INCR22_CAPTURE 0
#define PHASE_INCR22_DATA_WIDTH 32
#define PHASE_INCR22_DO_TEST_BENCH_WIRING 0
#define PHASE_INCR22_DRIVEN_SIM_VALUE 0
#define PHASE_INCR22_EDGE_TYPE "NONE"
#define PHASE_INCR22_FREQ 50000000
#define PHASE_INCR22_HAS_IN 0
#define PHASE_INCR22_HAS_OUT 1
#define PHASE_INCR22_HAS_TRI 0
#define PHASE_INCR22_IRQ -1
#define PHASE_INCR22_IRQ_INTERRUPT_CONTROLLER_ID -1
#define PHASE_INCR22_IRQ_TYPE "NONE"
#define PHASE_INCR22_NAME "/dev/phase_incr22"
#define PHASE_INCR22_RESET_VALUE 0
#define PHASE_INCR22_SPAN 16
#define PHASE_INCR22_TYPE "altera_avalon_pio"


/*
 * phase_incr23 configuration
 *
 */

#define ALT_MODULE_CLASS_phase_incr23 altera_avalon_pio
#define PHASE_INCR23_BASE 0x190
#define PHASE_INCR23_BIT_CLEARING_EDGE_REGISTER 0
#define PHASE_INCR23_BIT_MODIFYING_OUTPUT_REGISTER 0
#define PHASE_INCR23_CAPTURE 0
#define PHASE_INCR23_DATA_WIDTH 32
#define PHASE_INCR23_DO_TEST_BENCH_WIRING 0
#define PHASE_INCR23_DRIVEN_SIM_VALUE 0
#define PHASE_INCR23_EDGE_TYPE "NONE"
#define PHASE_INCR23_FREQ 50000000
#define PHASE_INCR23_HAS_IN 0
#define PHASE_INCR23_HAS_OUT 1
#define PHASE_INCR23_HAS_TRI 0
#define PHASE_INCR23_IRQ -1
#define PHASE_INCR23_IRQ_INTERRUPT_CONTROLLER_ID -1
#define PHASE_INCR23_IRQ_TYPE "NONE"
#define PHASE_INCR23_NAME "/dev/phase_incr23"
#define PHASE_INCR23_RESET_VALUE 0
#define PHASE_INCR23_SPAN 16
#define PHASE_INCR23_TYPE "altera_avalon_pio"


/*
 * phase_incr24 configuration
 *
 */

#define ALT_MODULE_CLASS_phase_incr24 altera_avalon_pio
#define PHASE_INCR24_BASE 0x180
#define PHASE_INCR24_BIT_CLEARING_EDGE_REGISTER 0
#define PHASE_INCR24_BIT_MODIFYING_OUTPUT_REGISTER 0
#define PHASE_INCR24_CAPTURE 0
#define PHASE_INCR24_DATA_WIDTH 32
#define PHASE_INCR24_DO_TEST_BENCH_WIRING 0
#define PHASE_INCR24_DRIVEN_SIM_VALUE 0
#define PHASE_INCR24_EDGE_TYPE "NONE"
#define PHASE_INCR24_FREQ 50000000
#define PHASE_INCR24_HAS_IN 0
#define PHASE_INCR24_HAS_OUT 1
#define PHASE_INCR24_HAS_TRI 0
#define PHASE_INCR24_IRQ -1
#define PHASE_INCR24_IRQ_INTERRUPT_CONTROLLER_ID -1
#define PHASE_INCR24_IRQ_TYPE "NONE"
#define PHASE_INCR24_NAME "/dev/phase_incr24"
#define PHASE_INCR24_RESET_VALUE 0
#define PHASE_INCR24_SPAN 16
#define PHASE_INCR24_TYPE "altera_avalon_pio"


/*
 * phase_incr25 configuration
 *
 */

#define ALT_MODULE_CLASS_phase_incr25 altera_avalon_pio
#define PHASE_INCR25_BASE 0x170
#define PHASE_INCR25_BIT_CLEARING_EDGE_REGISTER 0
#define PHASE_INCR25_BIT_MODIFYING_OUTPUT_REGISTER 0
#define PHASE_INCR25_CAPTURE 0
#define PHASE_INCR25_DATA_WIDTH 32
#define PHASE_INCR25_DO_TEST_BENCH_WIRING 0
#define PHASE_INCR25_DRIVEN_SIM_VALUE 0
#define PHASE_INCR25_EDGE_TYPE "NONE"
#define PHASE_INCR25_FREQ 50000000
#define PHASE_INCR25_HAS_IN 0
#define PHASE_INCR25_HAS_OUT 1
#define PHASE_INCR25_HAS_TRI 0
#define PHASE_INCR25_IRQ -1
#define PHASE_INCR25_IRQ_INTERRUPT_CONTROLLER_ID -1
#define PHASE_INCR25_IRQ_TYPE "NONE"
#define PHASE_INCR25_NAME "/dev/phase_incr25"
#define PHASE_INCR25_RESET_VALUE 0
#define PHASE_INCR25_SPAN 16
#define PHASE_INCR25_TYPE "altera_avalon_pio"


/*
 * phase_incr26 configuration
 *
 */

#define ALT_MODULE_CLASS_phase_incr26 altera_avalon_pio
#define PHASE_INCR26_BASE 0x160
#define PHASE_INCR26_BIT_CLEARING_EDGE_REGISTER 0
#define PHASE_INCR26_BIT_MODIFYING_OUTPUT_REGISTER 0
#define PHASE_INCR26_CAPTURE 0
#define PHASE_INCR26_DATA_WIDTH 32
#define PHASE_INCR26_DO_TEST_BENCH_WIRING 0
#define PHASE_INCR26_DRIVEN_SIM_VALUE 0
#define PHASE_INCR26_EDGE_TYPE "NONE"
#define PHASE_INCR26_FREQ 50000000
#define PHASE_INCR26_HAS_IN 0
#define PHASE_INCR26_HAS_OUT 1
#define PHASE_INCR26_HAS_TRI 0
#define PHASE_INCR26_IRQ -1
#define PHASE_INCR26_IRQ_INTERRUPT_CONTROLLER_ID -1
#define PHASE_INCR26_IRQ_TYPE "NONE"
#define PHASE_INCR26_NAME "/dev/phase_incr26"
#define PHASE_INCR26_RESET_VALUE 0
#define PHASE_INCR26_SPAN 16
#define PHASE_INCR26_TYPE "altera_avalon_pio"


/*
 * phase_incr27 configuration
 *
 */

#define ALT_MODULE_CLASS_phase_incr27 altera_avalon_pio
#define PHASE_INCR27_BASE 0x150
#define PHASE_INCR27_BIT_CLEARING_EDGE_REGISTER 0
#define PHASE_INCR27_BIT_MODIFYING_OUTPUT_REGISTER 0
#define PHASE_INCR27_CAPTURE 0
#define PHASE_INCR27_DATA_WIDTH 32
#define PHASE_INCR27_DO_TEST_BENCH_WIRING 0
#define PHASE_INCR27_DRIVEN_SIM_VALUE 0
#define PHASE_INCR27_EDGE_TYPE "NONE"
#define PHASE_INCR27_FREQ 50000000
#define PHASE_INCR27_HAS_IN 0
#define PHASE_INCR27_HAS_OUT 1
#define PHASE_INCR27_HAS_TRI 0
#define PHASE_INCR27_IRQ -1
#define PHASE_INCR27_IRQ_INTERRUPT_CONTROLLER_ID -1
#define PHASE_INCR27_IRQ_TYPE "NONE"
#define PHASE_INCR27_NAME "/dev/phase_incr27"
#define PHASE_INCR27_RESET_VALUE 0
#define PHASE_INCR27_SPAN 16
#define PHASE_INCR27_TYPE "altera_avalon_pio"


/*
 * phase_incr28 configuration
 *
 */

#define ALT_MODULE_CLASS_phase_incr28 altera_avalon_pio
#define PHASE_INCR28_BASE 0x140
#define PHASE_INCR28_BIT_CLEARING_EDGE_REGISTER 0
#define PHASE_INCR28_BIT_MODIFYING_OUTPUT_REGISTER 0
#define PHASE_INCR28_CAPTURE 0
#define PHASE_INCR28_DATA_WIDTH 32
#define PHASE_INCR28_DO_TEST_BENCH_WIRING 0
#define PHASE_INCR28_DRIVEN_SIM_VALUE 0
#define PHASE_INCR28_EDGE_TYPE "NONE"
#define PHASE_INCR28_FREQ 50000000
#define PHASE_INCR28_HAS_IN 0
#define PHASE_INCR28_HAS_OUT 1
#define PHASE_INCR28_HAS_TRI 0
#define PHASE_INCR28_IRQ -1
#define PHASE_INCR28_IRQ_INTERRUPT_CONTROLLER_ID -1
#define PHASE_INCR28_IRQ_TYPE "NONE"
#define PHASE_INCR28_NAME "/dev/phase_incr28"
#define PHASE_INCR28_RESET_VALUE 0
#define PHASE_INCR28_SPAN 16
#define PHASE_INCR28_TYPE "altera_avalon_pio"


/*
 * phase_incr29 configuration
 *
 */

#define ALT_MODULE_CLASS_phase_incr29 altera_avalon_pio
#define PHASE_INCR29_BASE 0x130
#define PHASE_INCR29_BIT_CLEARING_EDGE_REGISTER 0
#define PHASE_INCR29_BIT_MODIFYING_OUTPUT_REGISTER 0
#define PHASE_INCR29_CAPTURE 0
#define PHASE_INCR29_DATA_WIDTH 32
#define PHASE_INCR29_DO_TEST_BENCH_WIRING 0
#define PHASE_INCR29_DRIVEN_SIM_VALUE 0
#define PHASE_INCR29_EDGE_TYPE "NONE"
#define PHASE_INCR29_FREQ 50000000
#define PHASE_INCR29_HAS_IN 0
#define PHASE_INCR29_HAS_OUT 1
#define PHASE_INCR29_HAS_TRI 0
#define PHASE_INCR29_IRQ -1
#define PHASE_INCR29_IRQ_INTERRUPT_CONTROLLER_ID -1
#define PHASE_INCR29_IRQ_TYPE "NONE"
#define PHASE_INCR29_NAME "/dev/phase_incr29"
#define PHASE_INCR29_RESET_VALUE 0
#define PHASE_INCR29_SPAN 16
#define PHASE_INCR29_TYPE "altera_avalon_pio"


/*
 * phase_incr3 configuration
 *
 */

#define ALT_MODULE_CLASS_phase_incr3 altera_avalon_pio
#define PHASE_INCR3_BASE 0x310
#define PHASE_INCR3_BIT_CLEARING_EDGE_REGISTER 0
#define PHASE_INCR3_BIT_MODIFYING_OUTPUT_REGISTER 0
#define PHASE_INCR3_CAPTURE 0
#define PHASE_INCR3_DATA_WIDTH 32
#define PHASE_INCR3_DO_TEST_BENCH_WIRING 0
#define PHASE_INCR3_DRIVEN_SIM_VALUE 0
#define PHASE_INCR3_EDGE_TYPE "NONE"
#define PHASE_INCR3_FREQ 50000000
#define PHASE_INCR3_HAS_IN 0
#define PHASE_INCR3_HAS_OUT 1
#define PHASE_INCR3_HAS_TRI 0
#define PHASE_INCR3_IRQ -1
#define PHASE_INCR3_IRQ_INTERRUPT_CONTROLLER_ID -1
#define PHASE_INCR3_IRQ_TYPE "NONE"
#define PHASE_INCR3_NAME "/dev/phase_incr3"
#define PHASE_INCR3_RESET_VALUE 0
#define PHASE_INCR3_SPAN 16
#define PHASE_INCR3_TYPE "altera_avalon_pio"


/*
 * phase_incr30 configuration
 *
 */

#define ALT_MODULE_CLASS_phase_incr30 altera_avalon_pio
#define PHASE_INCR30_BASE 0x120
#define PHASE_INCR30_BIT_CLEARING_EDGE_REGISTER 0
#define PHASE_INCR30_BIT_MODIFYING_OUTPUT_REGISTER 0
#define PHASE_INCR30_CAPTURE 0
#define PHASE_INCR30_DATA_WIDTH 32
#define PHASE_INCR30_DO_TEST_BENCH_WIRING 0
#define PHASE_INCR30_DRIVEN_SIM_VALUE 0
#define PHASE_INCR30_EDGE_TYPE "NONE"
#define PHASE_INCR30_FREQ 50000000
#define PHASE_INCR30_HAS_IN 0
#define PHASE_INCR30_HAS_OUT 1
#define PHASE_INCR30_HAS_TRI 0
#define PHASE_INCR30_IRQ -1
#define PHASE_INCR30_IRQ_INTERRUPT_CONTROLLER_ID -1
#define PHASE_INCR30_IRQ_TYPE "NONE"
#define PHASE_INCR30_NAME "/dev/phase_incr30"
#define PHASE_INCR30_RESET_VALUE 0
#define PHASE_INCR30_SPAN 16
#define PHASE_INCR30_TYPE "altera_avalon_pio"


/*
 * phase_incr4 configuration
 *
 */

#define ALT_MODULE_CLASS_phase_incr4 altera_avalon_pio
#define PHASE_INCR4_BASE 0x300
#define PHASE_INCR4_BIT_CLEARING_EDGE_REGISTER 0
#define PHASE_INCR4_BIT_MODIFYING_OUTPUT_REGISTER 0
#define PHASE_INCR4_CAPTURE 0
#define PHASE_INCR4_DATA_WIDTH 32
#define PHASE_INCR4_DO_TEST_BENCH_WIRING 0
#define PHASE_INCR4_DRIVEN_SIM_VALUE 0
#define PHASE_INCR4_EDGE_TYPE "NONE"
#define PHASE_INCR4_FREQ 50000000
#define PHASE_INCR4_HAS_IN 0
#define PHASE_INCR4_HAS_OUT 1
#define PHASE_INCR4_HAS_TRI 0
#define PHASE_INCR4_IRQ -1
#define PHASE_INCR4_IRQ_INTERRUPT_CONTROLLER_ID -1
#define PHASE_INCR4_IRQ_TYPE "NONE"
#define PHASE_INCR4_NAME "/dev/phase_incr4"
#define PHASE_INCR4_RESET_VALUE 0
#define PHASE_INCR4_SPAN 16
#define PHASE_INCR4_TYPE "altera_avalon_pio"


/*
 * phase_incr5 configuration
 *
 */

#define ALT_MODULE_CLASS_phase_incr5 altera_avalon_pio
#define PHASE_INCR5_BASE 0x2f0
#define PHASE_INCR5_BIT_CLEARING_EDGE_REGISTER 0
#define PHASE_INCR5_BIT_MODIFYING_OUTPUT_REGISTER 0
#define PHASE_INCR5_CAPTURE 0
#define PHASE_INCR5_DATA_WIDTH 32
#define PHASE_INCR5_DO_TEST_BENCH_WIRING 0
#define PHASE_INCR5_DRIVEN_SIM_VALUE 0
#define PHASE_INCR5_EDGE_TYPE "NONE"
#define PHASE_INCR5_FREQ 50000000
#define PHASE_INCR5_HAS_IN 0
#define PHASE_INCR5_HAS_OUT 1
#define PHASE_INCR5_HAS_TRI 0
#define PHASE_INCR5_IRQ -1
#define PHASE_INCR5_IRQ_INTERRUPT_CONTROLLER_ID -1
#define PHASE_INCR5_IRQ_TYPE "NONE"
#define PHASE_INCR5_NAME "/dev/phase_incr5"
#define PHASE_INCR5_RESET_VALUE 0
#define PHASE_INCR5_SPAN 16
#define PHASE_INCR5_TYPE "altera_avalon_pio"


/*
 * phase_incr6 configuration
 *
 */

#define ALT_MODULE_CLASS_phase_incr6 altera_avalon_pio
#define PHASE_INCR6_BASE 0x2e0
#define PHASE_INCR6_BIT_CLEARING_EDGE_REGISTER 0
#define PHASE_INCR6_BIT_MODIFYING_OUTPUT_REGISTER 0
#define PHASE_INCR6_CAPTURE 0
#define PHASE_INCR6_DATA_WIDTH 32
#define PHASE_INCR6_DO_TEST_BENCH_WIRING 0
#define PHASE_INCR6_DRIVEN_SIM_VALUE 0
#define PHASE_INCR6_EDGE_TYPE "NONE"
#define PHASE_INCR6_FREQ 50000000
#define PHASE_INCR6_HAS_IN 0
#define PHASE_INCR6_HAS_OUT 1
#define PHASE_INCR6_HAS_TRI 0
#define PHASE_INCR6_IRQ -1
#define PHASE_INCR6_IRQ_INTERRUPT_CONTROLLER_ID -1
#define PHASE_INCR6_IRQ_TYPE "NONE"
#define PHASE_INCR6_NAME "/dev/phase_incr6"
#define PHASE_INCR6_RESET_VALUE 0
#define PHASE_INCR6_SPAN 16
#define PHASE_INCR6_TYPE "altera_avalon_pio"


/*
 * phase_incr7 configuration
 *
 */

#define ALT_MODULE_CLASS_phase_incr7 altera_avalon_pio
#define PHASE_INCR7_BASE 0x2d0
#define PHASE_INCR7_BIT_CLEARING_EDGE_REGISTER 0
#define PHASE_INCR7_BIT_MODIFYING_OUTPUT_REGISTER 0
#define PHASE_INCR7_CAPTURE 0
#define PHASE_INCR7_DATA_WIDTH 32
#define PHASE_INCR7_DO_TEST_BENCH_WIRING 0
#define PHASE_INCR7_DRIVEN_SIM_VALUE 0
#define PHASE_INCR7_EDGE_TYPE "NONE"
#define PHASE_INCR7_FREQ 50000000
#define PHASE_INCR7_HAS_IN 0
#define PHASE_INCR7_HAS_OUT 1
#define PHASE_INCR7_HAS_TRI 0
#define PHASE_INCR7_IRQ -1
#define PHASE_INCR7_IRQ_INTERRUPT_CONTROLLER_ID -1
#define PHASE_INCR7_IRQ_TYPE "NONE"
#define PHASE_INCR7_NAME "/dev/phase_incr7"
#define PHASE_INCR7_RESET_VALUE 0
#define PHASE_INCR7_SPAN 16
#define PHASE_INCR7_TYPE "altera_avalon_pio"


/*
 * phase_incr8 configuration
 *
 */

#define ALT_MODULE_CLASS_phase_incr8 altera_avalon_pio
#define PHASE_INCR8_BASE 0x2c0
#define PHASE_INCR8_BIT_CLEARING_EDGE_REGISTER 0
#define PHASE_INCR8_BIT_MODIFYING_OUTPUT_REGISTER 0
#define PHASE_INCR8_CAPTURE 0
#define PHASE_INCR8_DATA_WIDTH 32
#define PHASE_INCR8_DO_TEST_BENCH_WIRING 0
#define PHASE_INCR8_DRIVEN_SIM_VALUE 0
#define PHASE_INCR8_EDGE_TYPE "NONE"
#define PHASE_INCR8_FREQ 50000000
#define PHASE_INCR8_HAS_IN 0
#define PHASE_INCR8_HAS_OUT 1
#define PHASE_INCR8_HAS_TRI 0
#define PHASE_INCR8_IRQ -1
#define PHASE_INCR8_IRQ_INTERRUPT_CONTROLLER_ID -1
#define PHASE_INCR8_IRQ_TYPE "NONE"
#define PHASE_INCR8_NAME "/dev/phase_incr8"
#define PHASE_INCR8_RESET_VALUE 0
#define PHASE_INCR8_SPAN 16
#define PHASE_INCR8_TYPE "altera_avalon_pio"


/*
 * phase_incr9 configuration
 *
 */

#define ALT_MODULE_CLASS_phase_incr9 altera_avalon_pio
#define PHASE_INCR9_BASE 0x2b0
#define PHASE_INCR9_BIT_CLEARING_EDGE_REGISTER 0
#define PHASE_INCR9_BIT_MODIFYING_OUTPUT_REGISTER 0
#define PHASE_INCR9_CAPTURE 0
#define PHASE_INCR9_DATA_WIDTH 32
#define PHASE_INCR9_DO_TEST_BENCH_WIRING 0
#define PHASE_INCR9_DRIVEN_SIM_VALUE 0
#define PHASE_INCR9_EDGE_TYPE "NONE"
#define PHASE_INCR9_FREQ 50000000
#define PHASE_INCR9_HAS_IN 0
#define PHASE_INCR9_HAS_OUT 1
#define PHASE_INCR9_HAS_TRI 0
#define PHASE_INCR9_IRQ -1
#define PHASE_INCR9_IRQ_INTERRUPT_CONTROLLER_ID -1
#define PHASE_INCR9_IRQ_TYPE "NONE"
#define PHASE_INCR9_NAME "/dev/phase_incr9"
#define PHASE_INCR9_RESET_VALUE 0
#define PHASE_INCR9_SPAN 16
#define PHASE_INCR9_TYPE "altera_avalon_pio"


/*
 * sdram configuration
 *
 */

#define ALT_MODULE_CLASS_sdram altera_avalon_new_sdram_controller
#define SDRAM_BASE 0x8000000
#define SDRAM_CAS_LATENCY 3
#define SDRAM_CONTENTS_INFO
#define SDRAM_INIT_NOP_DELAY 0.0
#define SDRAM_INIT_REFRESH_COMMANDS 2
#define SDRAM_IRQ -1
#define SDRAM_IRQ_INTERRUPT_CONTROLLER_ID -1
#define SDRAM_IS_INITIALIZED 1
#define SDRAM_NAME "/dev/sdram"
#define SDRAM_POWERUP_DELAY 200.0
#define SDRAM_REFRESH_PERIOD 15.625
#define SDRAM_REGISTER_DATA_IN 1
#define SDRAM_SDRAM_ADDR_WIDTH 0x19
#define SDRAM_SDRAM_BANK_WIDTH 2
#define SDRAM_SDRAM_COL_WIDTH 10
#define SDRAM_SDRAM_DATA_WIDTH 16
#define SDRAM_SDRAM_NUM_BANKS 4
#define SDRAM_SDRAM_NUM_CHIPSELECTS 1
#define SDRAM_SDRAM_ROW_WIDTH 13
#define SDRAM_SHARED_DATA 0
#define SDRAM_SIM_MODEL_BASE 0
#define SDRAM_SPAN 67108864
#define SDRAM_STARVATION_INDICATOR 0
#define SDRAM_TRISTATE_BRIDGE_SLAVE ""
#define SDRAM_TYPE "altera_avalon_new_sdram_controller"
#define SDRAM_T_AC 5.4
#define SDRAM_T_MRD 3
#define SDRAM_T_RCD 20.0
#define SDRAM_T_RFC 70.0
#define SDRAM_T_RP 20.0
#define SDRAM_T_WR 14.0


/*
 * sdram_pll configuration
 *
 */

#define ALT_MODULE_CLASS_sdram_pll altpll
#define SDRAM_PLL_BASE 0x3d0
#define SDRAM_PLL_IRQ -1
#define SDRAM_PLL_IRQ_INTERRUPT_CONTROLLER_ID -1
#define SDRAM_PLL_NAME "/dev/sdram_pll"
#define SDRAM_PLL_SPAN 16
#define SDRAM_PLL_TYPE "altpll"


/*
 * spi_0 configuration
 *
 */

#define ALT_MODULE_CLASS_spi_0 altera_avalon_spi
#define SPI_0_BASE 0x20
#define SPI_0_CLOCKMULT 1
#define SPI_0_CLOCKPHASE 0
#define SPI_0_CLOCKPOLARITY 0
#define SPI_0_CLOCKUNITS "Hz"
#define SPI_0_DATABITS 8
#define SPI_0_DATAWIDTH 16
#define SPI_0_DELAYMULT "1.0E-9"
#define SPI_0_DELAYUNITS "ns"
#define SPI_0_EXTRADELAY 0
#define SPI_0_INSERT_SYNC 0
#define SPI_0_IRQ 3
#define SPI_0_IRQ_INTERRUPT_CONTROLLER_ID 0
#define SPI_0_ISMASTER 1
#define SPI_0_LSBFIRST 0
#define SPI_0_NAME "/dev/spi_0"
#define SPI_0_NUMSLAVES 1
#define SPI_0_PREFIX "spi_"
#define SPI_0_SPAN 32
#define SPI_0_SYNC_REG_DEPTH 2
#define SPI_0_TARGETCLOCK 2500000u
#define SPI_0_TARGETSSDELAY "0.0"
#define SPI_0_TYPE "altera_avalon_spi"


/*
 * sysid_qsys_0 configuration
 *
 */

#define ALT_MODULE_CLASS_sysid_qsys_0 altera_avalon_sysid_qsys
#define SYSID_QSYS_0_BASE 0x3e8
#define SYSID_QSYS_0_ID 0
#define SYSID_QSYS_0_IRQ -1
#define SYSID_QSYS_0_IRQ_INTERRUPT_CONTROLLER_ID -1
#define SYSID_QSYS_0_NAME "/dev/sysid_qsys_0"
#define SYSID_QSYS_0_SPAN 8
#define SYSID_QSYS_0_TIMESTAMP 1626883880
#define SYSID_QSYS_0_TYPE "altera_avalon_sysid_qsys"


/*
 * timer configuration
 *
 */

#define ALT_MODULE_CLASS_timer altera_avalon_timer
#define TIMER_ALWAYS_RUN 0
#define TIMER_BASE 0x40
#define TIMER_COUNTER_SIZE 64
#define TIMER_FIXED_PERIOD 0
#define TIMER_FREQ 50000000
#define TIMER_IRQ 2
#define TIMER_IRQ_INTERRUPT_CONTROLLER_ID 0
#define TIMER_LOAD_VALUE 49999
#define TIMER_MULT 0.001
#define TIMER_NAME "/dev/timer"
#define TIMER_PERIOD 1
#define TIMER_PERIOD_UNITS "ms"
#define TIMER_RESET_OUTPUT 0
#define TIMER_SNAPSHOT 1
#define TIMER_SPAN 64
#define TIMER_TICKS_PER_SEC 1000
#define TIMER_TIMEOUT_PULSE_OUTPUT 0
#define TIMER_TYPE "altera_avalon_timer"


/*
 * usb_gpx configuration
 *
 */

#define ALT_MODULE_CLASS_usb_gpx altera_avalon_pio
#define USB_GPX_BASE 0x390
#define USB_GPX_BIT_CLEARING_EDGE_REGISTER 0
#define USB_GPX_BIT_MODIFYING_OUTPUT_REGISTER 0
#define USB_GPX_CAPTURE 0
#define USB_GPX_DATA_WIDTH 1
#define USB_GPX_DO_TEST_BENCH_WIRING 0
#define USB_GPX_DRIVEN_SIM_VALUE 0
#define USB_GPX_EDGE_TYPE "NONE"
#define USB_GPX_FREQ 50000000
#define USB_GPX_HAS_IN 1
#define USB_GPX_HAS_OUT 0
#define USB_GPX_HAS_TRI 0
#define USB_GPX_IRQ -1
#define USB_GPX_IRQ_INTERRUPT_CONTROLLER_ID -1
#define USB_GPX_IRQ_TYPE "NONE"
#define USB_GPX_NAME "/dev/usb_gpx"
#define USB_GPX_RESET_VALUE 0
#define USB_GPX_SPAN 16
#define USB_GPX_TYPE "altera_avalon_pio"


/*
 * usb_irq configuration
 *
 */

#define ALT_MODULE_CLASS_usb_irq altera_avalon_pio
#define USB_IRQ_BASE 0x3a0
#define USB_IRQ_BIT_CLEARING_EDGE_REGISTER 0
#define USB_IRQ_BIT_MODIFYING_OUTPUT_REGISTER 0
#define USB_IRQ_CAPTURE 0
#define USB_IRQ_DATA_WIDTH 1
#define USB_IRQ_DO_TEST_BENCH_WIRING 0
#define USB_IRQ_DRIVEN_SIM_VALUE 0
#define USB_IRQ_EDGE_TYPE "NONE"
#define USB_IRQ_FREQ 50000000
#define USB_IRQ_HAS_IN 1
#define USB_IRQ_HAS_OUT 0
#define USB_IRQ_HAS_TRI 0
#define USB_IRQ_IRQ -1
#define USB_IRQ_IRQ_INTERRUPT_CONTROLLER_ID -1
#define USB_IRQ_IRQ_TYPE "NONE"
#define USB_IRQ_NAME "/dev/usb_irq"
#define USB_IRQ_RESET_VALUE 0
#define USB_IRQ_SPAN 16
#define USB_IRQ_TYPE "altera_avalon_pio"


/*
 * usb_rst configuration
 *
 */

#define ALT_MODULE_CLASS_usb_rst altera_avalon_pio
#define USB_RST_BASE 0x380
#define USB_RST_BIT_CLEARING_EDGE_REGISTER 0
#define USB_RST_BIT_MODIFYING_OUTPUT_REGISTER 0
#define USB_RST_CAPTURE 0
#define USB_RST_DATA_WIDTH 1
#define USB_RST_DO_TEST_BENCH_WIRING 0
#define USB_RST_DRIVEN_SIM_VALUE 0
#define USB_RST_EDGE_TYPE "NONE"
#define USB_RST_FREQ 50000000
#define USB_RST_HAS_IN 0
#define USB_RST_HAS_OUT 1
#define USB_RST_HAS_TRI 0
#define USB_RST_IRQ -1
#define USB_RST_IRQ_INTERRUPT_CONTROLLER_ID -1
#define USB_RST_IRQ_TYPE "NONE"
#define USB_RST_NAME "/dev/usb_rst"
#define USB_RST_RESET_VALUE 0
#define USB_RST_SPAN 16
#define USB_RST_TYPE "altera_avalon_pio"


/*
 * voiceIdx configuration
 *
 */

#define ALT_MODULE_CLASS_voiceIdx altera_avalon_pio
#define VOICEIDX_BASE 0xd0
#define VOICEIDX_BIT_CLEARING_EDGE_REGISTER 0
#define VOICEIDX_BIT_MODIFYING_OUTPUT_REGISTER 0
#define VOICEIDX_CAPTURE 0
#define VOICEIDX_DATA_WIDTH 8
#define VOICEIDX_DO_TEST_BENCH_WIRING 0
#define VOICEIDX_DRIVEN_SIM_VALUE 0
#define VOICEIDX_EDGE_TYPE "NONE"
#define VOICEIDX_FREQ 50000000
#define VOICEIDX_HAS_IN 1
#define VOICEIDX_HAS_OUT 0
#define VOICEIDX_HAS_TRI 0
#define VOICEIDX_IRQ -1
#define VOICEIDX_IRQ_INTERRUPT_CONTROLLER_ID -1
#define VOICEIDX_IRQ_TYPE "NONE"
#define VOICEIDX_NAME "/dev/voiceIdx"
#define VOICEIDX_RESET_VALUE 0
#define VOICEIDX_SPAN 16
#define VOICEIDX_TYPE "altera_avalon_pio"

#endif /* __SYSTEM_H_ */
